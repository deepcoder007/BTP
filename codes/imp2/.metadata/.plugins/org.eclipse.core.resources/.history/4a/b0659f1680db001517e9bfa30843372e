/*
 * tmpSrc.cpp
 *
 *  Created on: 22-Feb-2016
 *      Author: vibhanshu
 */
// This source file is just used for experimental demo of the project.
/*
 * I am using this file for testing purpose until we have a clear testing
 * container like googletest or otherwise.
 */

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<string>
#include<set>
#include"commons.h"
#include"Graph.h"
#include"configNodeIterator.h"
#include"configNode.h"
#include"configNodeStorage.h"
#include"configGraph.h"
using namespace std;

class configNodeNaive;

int main()
{
//	genGraph(2,4);
	cout<<"Starting program"<<endl;
	Graph g;
	g.readGraph("data/graph.dat");
	configNodeStorageNaive stor(&g);  // the storage struct

	int conf;   // we need only 1 int for this sample config
	conf += (1<<1);
	conf += (1<<4);
	conf += (1<<2);
	conf += (1<<3);
	configNode* tmp2,*tmp1,*tmp3,*tmp4;

	tmp1 = stor.getConfigNode(&g,1,1,&conf);
	tmp1 = stor.getConfigNode(&g,1,1,&conf);
	tmp1 = stor.getConfigNode(&g,1,1,&conf);
	tmp2 = tmp1->robotMove(4);
	tmp3 = tmp1->robotMove(3);
	tmp4 = tmp3->robotMove(2);
	cout<<"Number of stored nodes : "<<stor.getCount()<<endl;

	cout<<"tmp1 address :"<<tmp1<<endl;
	cout<<"tmp2 address :"<<tmp2<<endl;
	cout<<"tmp3 address :"<<tmp3<<endl;
	cout<<"tmp4 address :"<<tmp4<<endl;
	cout<<endl;

	configGraph BigGraph();
	set<configNode*> neighbors;

	neighbors = BigGraph.getNeighbors(&tmp1);
	cout<<"no. of neighbors of tmp1 "<<neighbors.size()<<endl;
	neighbors = BigGraph.geg


	return 0;
}




